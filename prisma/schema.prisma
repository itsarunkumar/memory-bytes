generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @unique
  username String   @unique
  name     String?
  bytes    Post[]
  folders  Folder[]

  auth_session Session[]
  key          Key[]
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Post {
  id         String   @unique @default(cuid())
  title      String
  content    Json?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  User     User?   @relation(fields: [userId], references: [id])
  userId   String?
  folder   Folder? @relation(fields: [folderId], references: [id]) // Use a singular relation
  folderId String? // Folder ID
}

model Folder {
  id         String   @unique @default(cuid())
  name       String
  posts      Post[] // Posts in this folder
  parent     Folder?  @relation("Subfolders", fields: [parentId], references: [id], onDelete: Cascade) // Optional parent folder
  parentId   String? // Parent folder ID
  subfolders Folder[] @relation("Subfolders") // Subfolders of this folder
  User       User?    @relation(fields: [userId], references: [id])
  userId     String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
